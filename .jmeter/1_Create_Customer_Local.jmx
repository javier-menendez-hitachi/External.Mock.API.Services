<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Customer Registration Single Opt-In" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroup guiclass="com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroupGui" testclass="com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroup" testname="bzm - Arrivals Create Customer WAPE" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${arrivalsTargetRate}</stringProp>
        <stringProp name="RampUp">${arrivalsRampUpTime}</stringProp>
        <stringProp name="Steps">${arrivalsRampUpSteps}</stringProp>
        <stringProp name="Hold">${arrivalsHoldTargetRateTime}</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="ConcurrencyLimit">${arrivalsConcurrencyLimit}</stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.arrivals.ArrivalsThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="baseUrl" elementType="Argument">
              <stringProp name="Argument.name">baseUrl</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.value">weu-apim-jmen.azure-api.net</stringProp>
            </elementProp>
            <elementProp name="nameFamily" elementType="Argument">
              <stringProp name="Argument.name">nameFamily</stringProp>
              <stringProp name="Argument.value">WAPE_MOCK</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="throughputPeriod" elementType="Argument">
              <stringProp name="Argument.name">throughputPeriod</stringProp>
              <stringProp name="Argument.value">${__BeanShell( System.getenv(&quot;throughputPeriod&quot;))}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="targetThroughput" elementType="Argument">
              <stringProp name="Argument.name">targetThroughput</stringProp>
              <stringProp name="Argument.value">${__BeanShell( System.getenv(&quot;targetThroughput&quot;))}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="emailUserName" elementType="Argument">
              <stringProp name="Argument.name">emailUserName</stringProp>
              <stringProp name="Argument.value">men</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="emailDomainName" elementType="Argument">
              <stringProp name="Argument.name">emailDomainName</stringProp>
              <stringProp name="Argument.value">gmail.com</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="batchedThreads" elementType="Argument">
              <stringProp name="Argument.name">batchedThreads</stringProp>
              <stringProp name="Argument.value">${__BeanShell( System.getenv(&quot;batchedThreads&quot;))}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="arrivalsTargetRate" elementType="Argument">
              <stringProp name="Argument.name">arrivalsTargetRate</stringProp>
              <stringProp name="Argument.value">35</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="arrivalsRampUpTime" elementType="Argument">
              <stringProp name="Argument.name">arrivalsRampUpTime</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="arrivalsRampUpSteps" elementType="Argument">
              <stringProp name="Argument.name">arrivalsRampUpSteps</stringProp>
              <stringProp name="Argument.value">2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="arrivalsHoldTargetRateTime" elementType="Argument">
              <stringProp name="Argument.name">arrivalsHoldTargetRateTime</stringProp>
              <stringProp name="Argument.value">5</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="arrivalsThreadIterationsLimit" elementType="Argument">
              <stringProp name="Argument.name">arrivalsThreadIterationsLimit</stringProp>
              <stringProp name="Argument.value">${__BeanShell( System.getenv(&quot;arrivalsThreadIterationsLimit&quot;))}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="arrivalsConcurrencyLimit" elementType="Argument">
              <stringProp name="Argument.name">arrivalsConcurrencyLimit</stringProp>
              <stringProp name="Argument.value">1000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="path" elementType="Argument">
              <stringProp name="Argument.name">path</stringProp>
              <stringProp name="Argument.value">mock-wape/api/v3/customer</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="wapeServiceAuthenticationKey" elementType="Argument">
              <stringProp name="Argument.name">wapeServiceAuthenticationKey</stringProp>
              <stringProp name="Argument.value">Ocp-Apim-Subscription-Key</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="wapeServiceAuthenticationValue" elementType="Argument">
              <stringProp name="Argument.name">wapeServiceAuthenticationValue</stringProp>
              <stringProp name="Argument.value">11111111111111111111111111111111</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Email Counter" enabled="true">
          <stringProp name="CounterConfig.start">${__time(ddhhmmssSSS)}</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">emailCount</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Customer Upsert" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;LeadSource&quot;: &quot;LOAD-TEST&quot;,&#xd;
    &quot;NameGiven&quot; : &quot;TEST JMETER&quot;,&#xd;
    &quot;NameFamily&quot; : &quot;${nameFamily}&quot;,&#xd;
    &quot;Gender&quot; : &quot;1&quot;,&#xd;
    &quot;DateOfBirth&quot;: &quot;2004-01-01T00:00:00&quot;,&#xd;
    &quot;Email&quot;: &quot;${emailUserName}+${emailCount}@${emailDomainName}&quot;,&#xd;
    &quot;VillagePrimary&quot;: &quot;BV&quot;,&#xd;
    &quot;Language&quot; : &quot;en-gb&quot;,&#xd;
    &quot;LastUpdateSource&quot;: &quot;LOAD-TEST&quot;,&#xd;
    &quot;SourceSystem&quot; : &quot;Website&quot;,&#xd;
    &quot;AddressLine1&quot;: &quot;Calle del Pez&quot;,&#xd;
    &quot;AddressLine2&quot;: &quot;89&quot;,&#xd;
    &quot;City&quot;: &quot;&quot;,&#xd;
    &quot;County&quot;: &quot;&quot;,&#xd;
    &quot;Country&quot;: &quot;AF&quot;,&#xd;
    &quot;PostCode&quot;: &quot;P29110835&quot;,&#xd;
    &quot;PhoneNumber&quot;: &quot;&quot;,&#xd;
    &quot;SingleOptIn&quot; : true,&#xd;
    &quot;EncodedPassword&quot; : &quot;quevivalituania&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${baseUrl}</stringProp>
          <stringProp name="HTTPSampler.protocol">Https</stringProp>
          <stringProp name="HTTPSampler.path">${path}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Headers for api" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">${wapeServiceAuthenticationKey}</stringProp>
                <stringProp name="Header.value">${wapeServiceAuthenticationValue}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
